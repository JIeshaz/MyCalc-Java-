import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class Main extends JFrame implements ActionListener {
    public JPanel panel;
    public double fromtext;
    public double fromtext2;
    public int oper;
    public int checker = 0;
    JTextArea text = new JTextArea();
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int scrH;
    int scrW;
    int W;
    int H;

    public void initpanel() {
        this.panel = new JPanel();
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setLayout((LayoutManager)null);
        this.text.setEditable(false);
        panel.add(this.text);
        this.text.setBounds(0, 20, 300, 130);
        this.text.setLineWrap(true);
        JButton b1 = new JButton("=");
        JButton b2 = new JButton("C");
        JButton numdot = new JButton(".");
        JButton num0 = new JButton("0");
        JButton num1 = new JButton();
        num1.setActionCommand("1");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/one.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num1.setIcon(new ImageIcon(newimg1));
        } catch (Exception var27) {
            System.out.println(var27);
        }

        JButton num2 = new JButton("2");
        num1.setActionCommand("2");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/two.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num2.setIcon(new ImageIcon(newimg1));
        } catch (Exception var26) {
            System.out.println(var26);
        }

        JButton num3 = new JButton("3");
        num1.setActionCommand("3");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/three.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num3.setIcon(new ImageIcon(newimg1));
        } catch (Exception var25) {
            System.out.println(var25);
        }

        JButton num4 = new JButton("4");
        num1.setActionCommand("4");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/four.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num4.setIcon(new ImageIcon(newimg1));
        } catch (Exception var24) {
            System.out.println(var24);
        }

        JButton num5 = new JButton("5");
        num1.setActionCommand("5");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/five.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num5.setIcon(new ImageIcon(newimg1));
        } catch (Exception var23) {
            System.out.println(var23);
        }

        JButton num6 = new JButton("6");
        num1.setActionCommand("6");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/six.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num6.setIcon(new ImageIcon(newimg1));
        } catch (Exception var22) {
            System.out.println(var22);
        }

        JButton num7 = new JButton("7");
        num1.setActionCommand("7");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/seven.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num7.setIcon(new ImageIcon(newimg1));
        } catch (Exception var21) {
            System.out.println(var21);
        }

        JButton num8 = new JButton("8");
        num1.setActionCommand("8");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/eight.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num8.setIcon(new ImageIcon(newimg1));
        } catch (Exception var20) {
            System.out.println(var20);
        }

        JButton num9 = new JButton("9");
        num1.setActionCommand("9");

        try {
            Image img1 = ImageIO.read(this.getClass().getResource("resources/nine.png"));
            Image newimg1 = img1.getScaledInstance(50, 50, 4);
            num9.setIcon(new ImageIcon(newimg1));
        } catch (Exception var19) {
            System.out.println(var19);
        }

        JButton numplus = new JButton("+");
        JButton numminus = new JButton("-");
        JButton nummult = new JButton("*");
        JButton numdivide = new JButton("/");
        panel.setPreferredSize(new Dimension(this.W, this.H));
        panel.setBackground(Color.cyan);
        panel.add(b1);
        b1.setBounds(200, 350, 100, 50);
        b1.setBackground(Color.white);
        b1.addActionListener(this);
        panel.add(b2);
        b2.setBounds(200, 150, 50, 50);
        b2.addActionListener(this);
        panel.add(numdot);
        numdot.setBounds(150, 350, 50, 50);
        numdot.addActionListener(this);
        panel.add(num0);
        num0.setBounds(50, 350, 100, 50);
        num0.addActionListener(this);
        panel.add(num1);
        num1.setBounds(50, 300, 50, 50);
        num1.addActionListener(this);
        panel.add(num2);
        num2.setBounds(100, 300, 50, 50);
        num2.addActionListener(this);
        panel.add(num3);
        num3.setBounds(150, 300, 50, 50);
        num3.addActionListener(this);
        panel.add(num4);
        num4.setBounds(50, 250, 50, 50);
        num4.addActionListener(this);
        panel.add(num5);
        num5.setBounds(100, 250, 50, 50);
        num5.addActionListener(this);
        panel.add(num6);
        num6.setBounds(150, 250, 50, 50);
        num6.addActionListener(this);
        panel.add(num7);
        num7.setBounds(50, 200, 50, 50);
        num7.addActionListener(this);
        panel.add(num8);
        num8.setBounds(100, 200, 50, 50);
        num8.addActionListener(this);
        panel.add(num9);
        num9.setBounds(150, 200, 50, 50);
        num9.addActionListener(this);
        panel.add(numplus);
        numplus.setBounds(200, 250, 50, 50);
        numplus.addActionListener(this);
        panel.add(numminus);
        numminus.setBounds(250, 250, 50, 50);
        numminus.addActionListener(this);
        panel.add(nummult);
        nummult.setBounds(200, 300, 50, 50);
        nummult.addActionListener(this);
        panel.add(numdivide);
        numdivide.setBounds(250, 300, 50, 50);
        numdivide.addActionListener(this);
        this.add(panel);
    }

    public void actionPerformed(ActionEvent event) {
        String source = event.getActionCommand();
        byte var4 = -1;
        switch(source.hashCode()) {
        case 42:
            if (source.equals("*")) {
                var4 = 14;
            }
            break;
        case 43:
            if (source.equals("+")) {
                var4 = 12;
            }
        case 44:
        case 58:
        case 59:
        case 60:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        default:
            break;
        case 45:
            if (source.equals("-")) {
                var4 = 13;
            }
            break;
        case 46:
            if (source.equals(".")) {
                var4 = 16;
            }
            break;
        case 47:
            if (source.equals("/")) {
                var4 = 15;
            }
            break;
        case 48:
            if (source.equals("0")) {
                var4 = 1;
            }
            break;
        case 49:
            if (source.equals("1")) {
                var4 = 2;
            }
            break;
        case 50:
            if (source.equals("2")) {
                var4 = 3;
            }
            break;
        case 51:
            if (source.equals("3")) {
                var4 = 4;
            }
            break;
        case 52:
            if (source.equals("4")) {
                var4 = 5;
            }
            break;
        case 53:
            if (source.equals("5")) {
                var4 = 6;
            }
            break;
        case 54:
            if (source.equals("6")) {
                var4 = 7;
            }
            break;
        case 55:
            if (source.equals("7")) {
                var4 = 8;
            }
            break;
        case 56:
            if (source.equals("8")) {
                var4 = 9;
            }
            break;
        case 57:
            if (source.equals("9")) {
                var4 = 10;
            }
            break;
        case 61:
            if (source.equals("=")) {
                var4 = 11;
            }
            break;
        case 67:
            if (source.equals("C")) {
                var4 = 17;
            }
        }

        switch(var4) {
        case 1:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 2:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 3:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 4:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 5:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 6:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 7:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 8:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 9:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 10:
            switch(this.checker) {
            case 0:
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                return;
            case 1:
                this.text.setText("");
                this.text.setText(this.text.getText());
                this.fromtext2 = Double.valueOf(this.text.getText());
                this.checker = 0;
                return;
            default:
                return;
            }
        case 11:
            System.out.println("=");
            switch(this.oper) {
            case 1:
                this.fromtext += this.fromtext2;
                break;
            case 2:
                this.fromtext -= this.fromtext2;
                break;
            case 3:
                this.fromtext *= this.fromtext2;
                break;
            case 4:
                this.fromtext /= this.fromtext2;
            }

            this.text.setText(String.valueOf(this.fromtext));
            break;
        case 12:
            System.out.println("+");
            this.fromtext = Double.valueOf(this.text.getText());
            this.checker = 1;
            this.oper = 1;
            break;
        case 13:
            System.out.println("-");
            this.fromtext = Double.valueOf(this.text.getText());
            this.checker = 1;
            this.oper = 2;
            break;
        case 14:
            System.out.println("*");
            this.fromtext = Double.valueOf(this.text.getText());
            this.checker = 1;
            this.oper = 3;
            break;
        case 15:
            System.out.println("/");
            this.fromtext = Double.valueOf(this.text.getText());
            this.checker = 1;
            this.oper = 4;
            break;
        case 16:
            this.text.setText(this.text.getText());
            break;
        case 17:
            System.out.println("C");
            this.text.setText("");
            break;
        default:
            System.out.println("clicked but no command");
        }

    }

    public static void main(String[] args) {
        new Main();
    }

    public Main() {
        this.scrH = this.screenSize.height;
        this.scrW = this.screenSize.width;
        this.W = 300;
        this.H = 400;
        this.initpanel();
        this.initFrame();
    }

    private void initFrame() {
        this.setDefaultCloseOperation(3);
        this.setTitle("Калькулятор");
        this.setLocationRelativeTo((Component)null);
        this.setResizable(true);
        this.setVisible(true);
        this.setLocation(this.scrW / 2 - this.W / 2, this.scrH / 2 - this.H / 2);
        this.pack();
    }
}
